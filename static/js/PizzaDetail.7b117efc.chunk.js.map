{"version":3,"file":"static/js/PizzaDetail.7b117efc.chunk.js","mappings":"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","sources":["components/PizzaInterections.tsx","webpack://react-typescript/./src/components/PizzaDetailBlock/PizzaDetailBlock.module.scss?f6e2","components/PizzaDetailSkeleton.tsx","components/PizzaDetailBlock/index.tsx","pages/PizzaDetail.tsx","../node_modules/react-content-loader/src/shared/uid.ts","../node_modules/react-content-loader/src/web/Svg.tsx","../node_modules/react-content-loader/src/web/ContentLoader.tsx","../node_modules/react-content-loader/src/web/presets/FacebookStyle.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addItem, selectCartCount, selectPizzaCount } from \"../redux/cartSlice\";\nimport { Pizza } from \"../API/PizzaAPI\";\nimport { useAppDispatch } from \"../redux/store\";\n\nexport const doughTypes = [\"тонкое\", \"традиционное\"];\n\nconst PizzaInterections: React.FC<{ pizza: Pizza }> = ({ pizza }) => {\n  const { id, types, sizes, price } = { ...pizza };\n\n  const [dough, setDough] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const dispatch = useAppDispatch();\n\n  const count = useSelector(selectPizzaCount(id, dough, size));\n\n  const onAddClick = () => {\n    dispatch(addItem({ pizza, count: 1, type: dough, size }));\n  };\n\n  useEffect(() => {\n    if (!types.includes(0)) setDough(1);\n  }, []);\n\n  return (\n    <>\n      <div className=\"pizza-block__selector\">\n        <ul>\n          {types.map((type) => (\n            <li\n              key={type}\n              className={dough === type ? \"active\" : \"\"}\n              onClick={() => setDough(type)}\n            >\n              {doughTypes[type]}\n            </li>\n          ))}\n        </ul>\n        <ul>\n          {sizes.map((s, index) => (\n            <li\n              key={index}\n              className={size === index ? \"active\" : \"\"}\n              onClick={() => setSize(index)}\n            >\n              {s} см.\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"pizza-block__bottom\">\n        <div className=\"pizza-block__price\">от {price} ₽</div>\n        <div\n          className=\"button button--outline button--add\"\n          onClick={onAddClick}\n        >\n          <svg\n            width=\"12\"\n            height=\"12\"\n            viewBox=\"0 0 12 12\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\n              fill=\"white\"\n            />\n          </svg>\n          <span>Добавить</span>\n          {count > 0 && <i>{count}</i>}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PizzaInterections;\n","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"PizzaDetailBlock_block__MaPz4\"};","import React from \"react\";\nimport ContentLoader from \"react-content-loader\";\n\nconst PizzaDetailSkeleton: React.FC = (props) => (\n  <ContentLoader\n    speed={2}\n    width={700}\n    height={300}\n    viewBox=\"0 0 700 300\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n    {...props}\n  >\n    <circle cx=\"146\" cy=\"146\" r=\"146\" />\n    <rect x=\"312\" y=\"0\" rx=\"10\" ry=\"10\" width=\"158\" height=\"30\" />\n    <rect x=\"312\" y=\"45\" rx=\"10\" ry=\"10\" width=\"388\" height=\"45\" />\n    <rect x=\"312\" y=\"120\" rx=\"10\" ry=\"10\" width=\"388\" height=\"90\" />\n    <rect x=\"312\" y=\"257\" rx=\"5\" ry=\"5\" width=\"90\" height=\"27\" />\n    <rect x=\"570\" y=\"247\" rx=\"30\" ry=\"30\" width=\"130\" height=\"44\" />\n  </ContentLoader>\n);\n\nexport default PizzaDetailSkeleton;\n","import React, { useEffect } from \"react\";\nimport styles from \"./PizzaDetailBlock.module.scss\";\nimport PizzaInterections from \"../PizzaInterections\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { fetchPizzaById, selectPizzaById, Status } from \"../../redux/pizzaSlice\";\nimport PizzaDetailSkeleton from \"../PizzaDetailSkeleton\";\nimport { RootState, useAppDispatch } from \"../../redux/store\";\n\nconst PizzaDetailBlock: React.FC = () => {\n  const params = useParams();\n  const id = Number(params.id);\n\n  const dispatch = useAppDispatch();\n  const status = useSelector((state: RootState) => state.pizza.status);\n  const pizza = useSelector(selectPizzaById(id));\n  const { title, composition, imageUrl } = { ...pizza };\n\n  useEffect(() => {\n    if (!pizza) {\n      dispatch(fetchPizzaById(id));\n    }\n  }, []);\n\n  if (status === Status.Error) throw new Response(\"Not Found\", { status: 404 });\n\n  return (\n    <div className={[\"pizza-block\", styles.block].join(\" \")}>\n      {status === Status.Loading ? (\n        <PizzaDetailSkeleton />\n      ) : pizza && (\n        <>\n          <div className={styles.left}>\n            <img src={imageUrl} alt=\"pizza\" />\n          </div>\n          <div className={styles.right}>\n            <h2>{title}</h2>\n            <p>{composition}</p>\n            <PizzaInterections pizza={pizza} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default PizzaDetailBlock;\n","import React from \"react\";\nimport PizzaDetailBlock from \"../components/PizzaDetailBlock\";\nimport { Link } from \"react-router-dom\";\n\nconst PizzaDetail: React.FC = () => {\n  return (\n    <div className=\"container\">\n      <Link className=\"button button--outline button--add go-back-btn\" to={\"..\"}>\n        <svg\n          width=\"8\"\n          height=\"14\"\n          viewBox=\"0 0 8 14\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M7 13L1 6.93015L6.86175 1\"\n            stroke=\"#D3D3D3\"\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          ></path>\n        </svg>\n        <span>Вернуться назад</span>\n      </Link>\n      <PizzaDetailBlock />\n    </div>\n  );\n};\n\nexport default PizzaDetail;\n","export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate = true,\n  backgroundColor = '#f5f6f7',\n  backgroundOpacity = 1,\n  baseUrl = '',\n  children,\n  foregroundColor = '#eee',\n  foregroundOpacity = 1,\n  gradientRatio = 2,\n  uniqueKey,\n  rtl = false,\n  speed = 1.2,\n  style = {},\n  title = 'Loading...',\n  beforeMask = null,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const dur = `${speed}s`\n\n  const from = `${gradientRatio * -1} 0`\n  const to = `${gradientRatio} 0`\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      {beforeMask && React.isValidElement(beforeMask) ? beforeMask : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs>\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient\n          id={idGradient}\n          gradientTransform={`translate(${from})`}\n        >\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          />\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          />\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          />\n\n          {animate && (\n            <animateTransform\n              attributeName=\"gradientTransform\"\n              type=\"translate\"\n              values={`${from}; 0 0; ${to}`}\n              dur={dur}\n              repeatCount=\"indefinite\"\n            />\n          )}\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n"],"names":["doughTypes","_ref","pizza","id","types","sizes","price","dough","setDough","useState","size","setSize","dispatch","useAppDispatch","count","useSelector","selectPizzaCount","useEffect","includes","_jsxs","_Fragment","children","className","_jsx","map","type","onClick","s","index","onAddClick","addItem","width","height","viewBox","fill","xmlns","d","props","ContentLoader","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","PizzaDetailBlock","params","useParams","Number","status","state","selectPizzaById","title","composition","imageUrl","fetchPizzaById","Status","Error","Response","styles","block","join","Loading","PizzaDetailSkeleton","left","src","alt","right","PizzaInterections","PizzaDetail","Link","to","stroke","strokeWidth","strokeLinecap","strokeLinejoin","SVG","_a","_b","animate","_c","_d","backgroundOpacity","_e","baseUrl","_f","_g","foregroundOpacity","_h","gradientRatio","uniqueKey","_j","rtl","_k","_l","style","_m","_o","beforeMask","__rest","fixedId","Math","random","toString","substring","idClip","concat","idGradient","idAria","rtlStyle","transform","dur","from","createElement","__assign","role","isValidElement","clipPath","gradientTransform","offset","stopColor","stopOpacity","attributeName","values","repeatCount","ReactContentLoaderFacebook"],"sourceRoot":""}