{"version":3,"file":"static/js/Cart.2261385d.chunk.js","mappings":"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","sources":["components/PizzaInterections.tsx","components/CartItem.tsx","components/CartEmpty.tsx","pages/Cart.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addItem, selectCartCount, selectPizzaCount } from \"../redux/cartSlice\";\nimport { Pizza } from \"../API/PizzaAPI\";\nimport { useAppDispatch } from \"../redux/store\";\n\nexport const doughTypes = [\"тонкое\", \"традиционное\"];\n\nconst PizzaInterections: React.FC<{ pizza: Pizza }> = ({ pizza }) => {\n  const { id, types, sizes, price } = { ...pizza };\n\n  const [dough, setDough] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const dispatch = useAppDispatch();\n\n  const count = useSelector(selectPizzaCount(id, dough, size));\n\n  const onAddClick = () => {\n    dispatch(addItem({ pizza, count: 1, type: dough, size }));\n  };\n\n  useEffect(() => {\n    if (!types.includes(0)) setDough(1);\n  }, []);\n\n  return (\n    <>\n      <div className=\"pizza-block__selector\">\n        <ul>\n          {types.map((type) => (\n            <li\n              key={type}\n              className={dough === type ? \"active\" : \"\"}\n              onClick={() => setDough(type)}\n            >\n              {doughTypes[type]}\n            </li>\n          ))}\n        </ul>\n        <ul>\n          {sizes.map((s, index) => (\n            <li\n              key={index}\n              className={size === index ? \"active\" : \"\"}\n              onClick={() => setSize(index)}\n            >\n              {s} см.\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"pizza-block__bottom\">\n        <div className=\"pizza-block__price\">от {price} ₽</div>\n        <div\n          className=\"button button--outline button--add\"\n          onClick={onAddClick}\n        >\n          <svg\n            width=\"12\"\n            height=\"12\"\n            viewBox=\"0 0 12 12\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\n              fill=\"white\"\n            />\n          </svg>\n          <span>Добавить</span>\n          {count > 0 && <i>{count}</i>}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PizzaInterections;\n","import React from \"react\";\nimport { doughTypes } from \"./PizzaInterections\";\nimport { useDispatch } from \"react-redux\";\nimport { decrementItem, incrementItem, removeItem } from \"../redux/cartSlice\";\nimport { useAppDispatch } from \"../redux/store\";\n\ntype CartItemProps = {\n  id: number;\n  pizza: any;\n  count: number;\n  type: number;\n  size: number;\n}\n\nconst CartItem: React.FC<CartItemProps> = ({ id, pizza, count, type, size }) => {\n  const dispatch = useAppDispatch();\n\n  return (\n    <div className=\"cart__item\">\n      <div className=\"cart__item-img\">\n        <img className=\"pizza-block__image\" src={pizza.imageUrl} alt=\"Pizza\" />\n      </div>\n      <div className=\"cart__item-info\">\n        <h3>{pizza.title}</h3>\n        <p>\n          {doughTypes[type]} тесто, {pizza.sizes[size]} см.\n        </p>\n      </div>\n      <div className=\"cart__item-count\">\n        <button\n          onClick={() => {\n            dispatch(decrementItem(id));\n          }}\n          disabled={count < 2}\n          className=\"button button--outline button--circle cart__item-count-minus\"\n        >\n          <svg\n            width=\"10\"\n            height=\"10\"\n            viewBox=\"0 0 10 10\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\n              fill=\"#EB5A1E\"\n            />\n            <path\n              d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\n              fill=\"#EB5A1E\"\n            />\n          </svg>\n        </button>\n        <b>{count}</b>\n        <button\n          onClick={() => {\n            dispatch(incrementItem(id));\n          }}\n          className=\"button button--outline button--circle cart__item-count-plus\"\n        >\n          <svg\n            width=\"10\"\n            height=\"10\"\n            viewBox=\"0 0 10 10\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\n              fill=\"#EB5A1E\"\n            />\n            <path\n              d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\n              fill=\"#EB5A1E\"\n            />\n          </svg>\n        </button>\n      </div>\n      <div className=\"cart__item-price\">\n        <b>{pizza.price * count} ₽</b>\n      </div>\n      <div className=\"cart__item-remove\">\n        <button\n          onClick={() => {\n            dispatch(removeItem(id));\n          }}\n          className=\"button button--outline button--circle\"\n        >\n          <svg\n            width=\"10\"\n            height=\"10\"\n            viewBox=\"0 0 10 10\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\n              fill=\"#EB5A1E\"\n            />\n            <path\n              d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\n              fill=\"#EB5A1E\"\n            />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CartItem;\n","import React from \"react\";\n\nimport emptyCartImg from \"../assets/img/empty-cart.png\";\nimport { Link } from \"react-router-dom\";\n\nconst CartEmpty: React.FC = () => {\n  return (\n    <div className=\"container container--cart\">\n      <div className=\"cart cart--empty\">\n        <h2>\n          Корзина пустая <span>😕</span>\n        </h2>\n        <p>\n          Вероятней всего, вы не заказывали ещё пиццу.\n          <br />\n          Для того, чтобы заказать пиццу, перейди на главную страницу.\n        </p>\n        <img src={emptyCartImg} alt=\"Empty cart\" />\n        <Link to={\"..\"} className=\"button button--black\">\n          <span>Вернуться назад</span>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default CartEmpty;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CartItem from \"../components/CartItem\";\nimport { useSelector } from \"react-redux\";\nimport { clearItems, selectCartCount, selectCartSum } from \"../redux/cartSlice\";\nimport CartEmpty from \"../components/CartEmpty\";\nimport { RootState, useAppDispatch } from \"../redux/store\";\n\nconst Cart: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { items, pizzasInfo } = useSelector((state: RootState) => state.cart);\n  const cartCount = useSelector(selectCartCount);\n  const cartSum = useSelector(selectCartSum);\n\n  if (cartCount < 1) return <CartEmpty />;\n\n  return (\n    <div className=\"container container--cart\">\n      <div className=\"cart\">\n        <div className=\"cart__top\">\n          <h2 className=\"content__title\">\n            <svg\n              width=\"18\"\n              height=\"18\"\n              viewBox=\"0 0 18 18\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\n                stroke=\"white\"\n                strokeWidth=\"1.8\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n              <path\n                d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\n                stroke=\"white\"\n                strokeWidth=\"1.8\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n              <path\n                d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\n                stroke=\"white\"\n                strokeWidth=\"1.8\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n            Корзина\n          </h2>\n          <div\n            onClick={() => {\n              dispatch(clearItems());\n            }}\n            className=\"cart__clear\"\n          >\n            <svg\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 20 20\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M2.5 5H4.16667H17.5\"\n                stroke=\"#B6B6B6\"\n                strokeWidth=\"1.2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n              <path\n                d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\"\n                stroke=\"#B6B6B6\"\n                strokeWidth=\"1.2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n              <path\n                d=\"M8.33337 9.16667V14.1667\"\n                stroke=\"#B6B6B6\"\n                strokeWidth=\"1.2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n              <path\n                d=\"M11.6666 9.16667V14.1667\"\n                stroke=\"#B6B6B6\"\n                strokeWidth=\"1.2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n\n            <span>Очистить корзину</span>\n          </div>\n        </div>\n        <div className=\"content__items\">\n          {pizzasInfo.length > 0 &&\n            items.map((item) => (\n              <CartItem\n                key={item.id}\n                pizza={pizzasInfo.find((pizza) => pizza.id === item.pizzaId)}\n                {...item}\n              />\n            ))}\n        </div>\n        <div className=\"cart__bottom\">\n          <div className=\"cart__bottom-details\">\n            <span>\n              Всего пицц: <b>{cartCount} шт.</b>\n            </span>\n            <span>\n              Сумма заказа: <b>{cartSum} ₽</b>\n            </span>\n          </div>\n          <div className=\"cart__bottom-buttons\">\n            <Link\n              to={\"..\"}\n              className=\"button button--outline button--add go-back-btn\"\n            >\n              <svg\n                width=\"8\"\n                height=\"14\"\n                viewBox=\"0 0 8 14\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M7 13L1 6.93015L6.86175 1\"\n                  stroke=\"#D3D3D3\"\n                  strokeWidth=\"1.5\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n\n              <span>Вернуться назад</span>\n            </Link>\n            <div className=\"button pay-btn\">\n              <span>Оплатить сейчас</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Cart;\n"],"names":["doughTypes","_ref","pizza","id","types","sizes","price","dough","setDough","useState","size","setSize","dispatch","useAppDispatch","count","useSelector","selectPizzaCount","useEffect","includes","_jsxs","_Fragment","children","className","_jsx","map","type","onClick","s","index","onAddClick","addItem","width","height","viewBox","fill","xmlns","d","src","imageUrl","alt","title","decrementItem","disabled","incrementItem","removeItem","CartEmpty","emptyCartImg","Link","to","Cart","items","pizzasInfo","state","cart","cartCount","selectCartCount","cartSum","selectCartSum","stroke","strokeWidth","strokeLinecap","strokeLinejoin","clearItems","length","item","CartItem","find","pizzaId"],"sourceRoot":""}